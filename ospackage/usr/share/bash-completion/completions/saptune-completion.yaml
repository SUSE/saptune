# This is the input configuration for 'completely' (https://github.com/DannyBen/completely)
# to generate the bash completion script.
#
# v2.0
#
# Changelog:    29.09.2022  v2.0  - first release for saptune 3.1
#
# Syntax:       saptune [--output FORMAT] help
#               saptune [--output FORMAT] version  
#               saptune [--output FORMAT] status [--non-compliance-check] 
#               saptune [--output FORMAT] daemon ( start | stop | status [--non-compliance-check] )
#               saptune [--output FORMAT] service ( start | stop | restart | takeover | enable | disable | enablestart | disablestop | status [--non-compliance-check] )
#               saptune [--output FORMAT] note ( list | revertall | enabled | applied )
#               saptune [--output FORMAT] note ( apply | simulate | customise | create | edit | revert | show | delete ) NOTEID
#               saptune [--output FORMAT] note verify [--colorscheme SCHEME] [--show-non-compliant] [NOTEID]
#               saptune [--output FORMAT] note rename NOTEID NOTEID
#               saptune [--output FORMAT] solution ( list | verify | enabled | applied )
#               saptune [--output FORMAT] solution ( apply | simulate | customise | create | edit | revert | show | delete ) SolutionName
#               saptune [--output FORMAT] solution verify [--colorscheme SCHEME] [--show-non-compliant] [SOLUTIONID]
#               saptune [--output FORMAT] solution rename SOLUTIONID SOLUTIONID
#               saptune [--output FORMAT] staging ( status | enable | disable | is-enabled | list )
#               saptune [--output FORMAT] staging ( analysis | diff ) [ ( NOTEID | SOLUTIONID )... | all ]
#               saptune [--output FORMAT] staging release [--force|--dry-run] [ ( NOTEID | SOLUTIONID )... | all ]
#               saptune [--output FORMAT] revert all
#               saptune [--output FORMAT] lock remove
#               saptune [--output FORMAT] check
#
#
# Caveats:      - It is not possible to use the '=' sign in options. Completion will stop at the '=' sign.
#                 (Possible workaround: Use a non-special character which does not appear in the resulting 
#                 completion script (like 'ยง'), use this here in the definition instead of '=' and replace
#                 'ยง' with '=' in the generated completion script. The option has now no values anymore, 
#                 instead each combination is treated as a individual option. )
#
#               - It is not feasible to support the option ('--output FORMAT') which has to come immediately after 'saptune'
#                 Each combination must be listed in this file, which would double the current entries. 
#                 The support for this must be added to the generated script later.
#
#               - The completely resolved command needs to have a dummy entry: '$()' (empty command) to stop further
#                 processing.
#
#
# Questions:    - Should (already implemented as such) ...
#                   - '--output=FORMAT' not better be '--output FORMAT' and
#                   - '--colorscheme=<SCHEME>' not better be '--colorscheme <SCHEME>'?
#               - Should (already implemented as such) 'saptune solution verify' not also
#                 get the options '--colorscheme <SCHEME>' and '--show-non-compliant'?
#               - Some command descriptions are incorrect:
#                 - some square brackets should be replaced with normal ones,
#                 - staging lists 'analysis' and 'diff' twice.
#                 - staging 'analysis'/'diff'/'release' should use grouping for the id list
#               - For autocompletion a better choice would be ...
#                   - '/var/lib/saptune/working/notes/' instead of '/usr/share/saptune/notes'
#                   - '/var/lib/saptune/working/sols/' instead of '/usr/share/saptune/sols/'



# --- First level ---
saptune:
  - --format
  - help
  - version  
  - status
  - daemon
  - service
  - note
  - solution
  - staging
  - revert
  - lock
  - check

# --- start: support for global format option ---
#
# THIS BLOCK PREVENTS A WORKABLE SOLUTION WITH THE REST
# OF THE DEFINITION UNLESS THE FOLLOWING BLOCK GETS ADDED
# TO THE RESULTING SCRIPT AS FIRST LINES OF THE FUNCTION
# '_saptune_completions()':
#
#  if [[ "${COMP_WORDS[*]}" =~ ^saptune\ --format\ json ]] ; then
#        unset COMP_WORDS[1]  # remove '--format'
#        unset COMP_WORDS[2]  # remove '--json'
#        COMP_WORDS=( ${COMP_WORDS[@]} )
#        ((COMP_CWORD-=2))
#  fi
#
# THIS IS CURRENTLY THE ONLY WAY TO SUPPORT THE FORMAT
# OPTION WITHOUT LETTING THE AMOUNT OF DEFINITIONS IN THIS
# FILE EXPLODE.

saptune --format:
  - json

saptune --format *:
  - help
  - version  
  - status
  - daemon
  - service
  - note
  - solution
  - staging
  - revert
  - lock
  - check

# --- end: support for global format option ---

# --- saptune help ---
saptune help:
  - $()


# --- saptune version ---
saptune version:
  - $()


# --- saptune status ---
saptune status:
  - --non-compliance-check
  - $()

saptune status --non-compliance-check:
  - $()

# --- saptune daemon ---
saptune daemon:
  - start
  - stop
  - status

saptune daemon start: &stop
  - $()

saptune daemon stop: *stop

saptune daemon status:
  - --non-compliance-check
  - $()

saptune daemon status --non-compliance-check: *stop


# --- saptune service ---
saptune service:
  - start
  - stop
  - restart 
  - takeover 
  - enable 
  - disable 
  - enablestart 
  - disablestop 
  - status 

saptune service start: &stop
  - $()

saptune service stop: *stop

saptune service restart: *stop

saptune service takeover: *stop

saptune service enable: *stop

saptune service disable: *stop

saptune service enablestart: *stop

saptune service disablestop: *stop

saptune service status:
  - --non-compliance-check
  - $()

saptune service status*--non-compliance-check: *stop


# --- saptune note ---
saptune note:
  - list
  - revertall
  - enabled
  - applied
  - apply
  - simulate
  - customise
  - create
  - edit
  - revert
  - show
  - delete
  - verify
  - rename

saptune note list: &stop
  - $()

saptune note revertall: *stop

saptune note enabled: *stop

saptune note applied: *stop

saptune note apply: &list-all-notes
  - $(ls /var/lib/saptune/working/notes/ ; ls /etc/saptune/extra)

saptune note apply *: *stop

saptune note simulate: *list-all-notes

saptune note simulate *: *stop

saptune note customise: *list-all-notes

saptune note customise *: *stop

saptune note create: *list-all-notes

saptune note create *: *stop

saptune note edit: *list-all-notes

saptune note edit *: *stop

saptune note revert: *list-all-notes

saptune note revert *: *stop

saptune note show: *list-all-notes

saptune note show *: *stop

saptune note delete: *list-all-notes

saptune note delete *: *stop

saptune note verify: 
  - --colorscheme
  - --show-non-compliant
  - $(ls /var/lib/saptune/working/notes ; ls /etc/saptune/extra)

saptune note verify *: *stop
  
saptune note verify --show-non-compliant:
  - --colorscheme
  - $(ls /var/lib/saptune/working/notes ; ls /etc/saptune/extra)

saptune note verify --show-non-compliant *: *stop

saptune note verify --show-non-compliant --colorscheme: &color-schemes
  - full-green-zebra
  - full-blue-zebra
  - cmpl-green-zebra
  - cmpl-blue-zebra
  - full-red-noncmpl
  - full-yellow-noncmpl
  - red-noncmpl
  - yellow-noncmpl

saptune note verify --show-non-compliant --colorscheme *: *list-all-notes

saptune note verify --show-non-compliant --colorscheme * *: *stop

saptune note verify --colorscheme: *color-schemes

saptune note verify --colorscheme *:
  - --show-non-compliant
  - $(ls /var/lib/saptune/working/notes ; ls /etc/saptune/extra)

saptune note verify --colorscheme * *: *stop

saptune note verify --colorscheme * --show-non-compliant: *list-all-notes

saptune note verify --colorscheme * --show-non-compliant *: *stop

saptune note rename: *list-all-notes

saptune note rename *: *stop 


# --- saptune solution ---
saptune solution:
  - list
  - enabled
  - applied
  - apply
  - simulate
  - customise
  - create
  - edit
  - revert
  - show
  - delete
  - verify
  - rename

saptune solution list: &stop
  - $()

saptune solution enabled: *stop

saptune solution applied: *stop

saptune solution apply: &list-all-solutions
  - $(find   /var/lib/saptune/working/notes /etc/saptune/extra/ -name '*.sol' -printf '%P ' | sed 's/\.sol//g')

saptune solution apply *: *stop

saptune solution simulate: *list-all-solutions

saptune solution simulate *: *stop

saptune solution customise: *list-all-solutions

saptune solution customise *: *stop

saptune solution create: *list-all-solutions

saptune solution create *: *stop

saptune solution edit: *list-all-solutions

saptune solution edit *: *stop

saptune solution revert: *list-all-solutions

saptune solution revert *: *stop

saptune solution show: *list-all-solutions

saptune solution show *: *stop

saptune solution delete: *list-all-solutions

saptune solution delete *: *stop

saptune solution verify: 
  - --colorscheme
  - --show-non-compliant
  - $(find /var/lib/saptune/working/sols/ /etc/saptune/extra/ -name '*.sol' -printf '%P ' | sed 's/\.sol//g')

saptune solution verify *: *stop
  
saptune solution verify --show-non-compliant:
  - --colorscheme
  - $(find /var/lib/saptune/working/sols/ /etc/saptune/extra/ -name '*.sol' -printf '%P ' | sed 's/\.sol//g')

saptune solution verify --show-non-compliant *: *stop

saptune solution verify --show-non-compliant --colorscheme: &color-schemes
  - full-green-zebra
  - full-blue-zebra
  - cmpl-green-zebra
  - cmpl-blue-zebra
  - full-red-noncmpl
  - full-yellow-noncmpl
  - red-noncmpl
  - yellow-noncmpl

saptune solution verify --show-non-compliant --colorscheme *: *list-all-solutions

saptune solution verify --show-non-compliant --colorscheme * *: *stop

saptune solution verify --colorscheme: *color-schemes

saptune solution verify --colorscheme *:
  - --show-non-compliant
  - $(find /var/lib/saptune/working/sols/ /etc/saptune/extra/ -name '*.sol' -printf '%P ' | sed 's/\.sol//g')

saptune solution verify --colorscheme * *: *stop

saptune solution verify --colorscheme * --show-non-compliant: *list-all-solutions

saptune solution verify --colorscheme * --show-non-compliant *: *stop

saptune solution rename: *list-all-solutions

saptune solution rename *: *stop 



# --- saptune staging ---
saptune staging:
  - status
  - enable
  - disable
  - is-enabled
  - list
  - diff
  - analysis
  - release

saptune staging status:
  - $()

saptune staging enable:
  - $()

saptune staging disable:
  - $()

saptune staging is-enabled:
  - $()

saptune staging list:
  - $()


saptune staging diff:
  - $(find /var/lib/saptune/staging/latest/ -printf '%P ' | sed 's/\.sol//g')
  - all
  
saptune staging diff *:
  - $(find /var/lib/saptune/staging/latest/ -printf '%P ' | sed 's/\.sol//g')

saptune staging diff all:
  - $()

saptune staging analysis:
  - $(find /var/lib/saptune/staging/latest/ -printf '%P ' | sed 's/\.sol//g')
  - all
  
saptune staging analysis *:
  - $(find /var/lib/saptune/staging/latest/ -printf '%P ' | sed 's/\.sol//g')

saptune staging analysis all:
  - $()

saptune staging release:
  - --force
  - --dry-run
  - $(find /var/lib/saptune/staging/latest/ -printf '%P ' | sed 's/\.sol//g')
  - all

saptune staging release --force:
  - $(find /var/lib/saptune/staging/latest/ -printf '%P ' | sed 's/\.sol//g')
  - all

saptune staging release --force all:
  - $()

saptune staging release --dry-run:
  - $(find /var/lib/saptune/staging/latest/ -printf '%P ' | sed 's/\.sol//g')
  - all

saptune staging release --dry-run all:
  - $()

saptune staging release *:
  - $(find /var/lib/saptune/staging/latest/ -printf '%P ' | sed 's/\.sol//g')

saptune staging release all:
  - $()


# --- saptune revert ---
saptune revert:
  - all 

saptune revert all:
  - $()


# --- saptune lock ---
saptune lock:
  - remove

saptune lock remove: 
  - $()


# --- saptune check ---
saptune check: 
  - $()

