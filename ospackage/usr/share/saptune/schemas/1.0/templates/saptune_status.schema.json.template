{% extends "common.schema.json.template" %}

{% block command %}saptune status{% endblock %}

{% block description %}Describes the output of '{{ self.command() }}.{% endblock %}

{% block result_required %}["services", "systemd system state", "virtualization", "configured version", "package version", "enabled Solution", "additional enabled Notes", "enabled Notes", "applied Notes", "staging", "remember message"]{% endblock %}

{% block result_properties %}
                 "services": {
                    "description": "The states of various systemd services related to saptune.",
                    "type": "object",
                    "required": [ "saptune", "sapconf", "tuned" ],
                    "additionalProperties": true,  
                    "propertyNames": {
                        "enum": [ "saptune", "sapconf", "tuned", "tuned profile" ]
                    },
                    "properties": {
                        "saptune": { "$ref": "#/$defs/systemd state" },
                        "sapconf": { "$ref": "#/$defs/systemd state" },
                        "tuned": { "$ref": "#/$defs/systemd state" },
                        "tuned profile": {
                            "description": "The currently set tuned profile, if `tuned.service` is active.",
                            "type": "string"
                        }
                    }
                }, 
                "systemd system state": {
                    "description": "Possible systemd system states reported by 'systemctl is-system-running'.",
                    "type": "string",
                    "enum": ["initializing", "starting", "running", "degraded", "maintenance", "stopping", "offline", "unknown"]    
                },
                "virtualization": {
                    "description":  "The virtualization technology of the system (see `systemd-detect-virt --list`).",
                    "enum": [ "none","kvm","amazon","qemu","bochs","xen","uml","vmware","oracle","microsoft","zvm","parallels","bhyve","qnx","acrn","powervm","vm-other","systemd-nspawn","lxc-libvirt","lxc","openvz","docker","podman","rkt","wsl","proot","container-other" ]
                },
                "configured version": {
                    "description":  "The saptune major version as configured in `SAPTUNE_VERSION` of `/etc/sysconfig/saptune`.",
                    "enum": ["1", "2", "3"]
                },
                "package version": { 
                    "description": "The version string of the installed saptune package.",
                    "type": "string",
                    "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
                    "examples": ["3.0.1", "3.1.0"]
                }, 
                "enabled Solution": { "$ref": "#/$defs/saptune enabled Solution" },
                "applied Solution": { "$ref": "#/$defs/saptune applied Solution" },
                "additional enabled Notes": { "$ref": "#/$defs/saptune additional enabled Notes" },
                "enabled Notes": { "$ref": "#/$defs/saptune enabled Notes" },
                "applied Notes": { "$ref": "#/$defs/saptune applied Notes" },


                "staging": {
                    "description": "Details about staging.",
                    "type": "object",
                    "required": [ "staging enabled", "staged Notes", "staged Solutions" ],
                    "additionalProperties": false,
                    "properties": {
                        "staging enabled" : {
                            "description": "States if staging is enabled or not.",
                            "type": "boolean"
                        },
                        "staged Notes": { "$ref": "#/$defs/saptune staged Notes" },
                        "staged Solutions": { "$ref": "#/$defs/saptune staged Solutions" }
                    }
                },
                "remember message": { 
                    "$ref": "#/$defs/saptune remember message"
                }    
{% endblock %}

