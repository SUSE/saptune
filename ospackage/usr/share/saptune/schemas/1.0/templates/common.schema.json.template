{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "file:///usr/share/saptune/schemas/1.0/{{ self.command()|replace(' ', '_') }}.schema.json",  

    "title": "{% block title %}{% endblock %}",
    "description": "{% block description %}{% endblock %}",

    "type": "object",
    "required": [ "$schema", "publish time", "argv", "pid", "command", "exit code", "result", "messages"],
    "additionalProperties": true,
        "propertyNames": {
        "enum": [ "$schema", "publish time", "argv", "pid", "command", "exit code", "result", "messages", "Angela's pieces of wisdom" ]
    },
    "properties": {

        "$schema": {
            "description": "URI to the schema definition",
            "type": "string"
        },

        "publish time": {
            "description": "saptune timestamp of the time this JSON object was created.",
            "type": "string",
            "pattern": "^((?:(\\d{4}-\\d{2}-\\d{2}) (\\d{2}:\\d{2}:\\d{2}(?:\\.\\d{3})?)))$",
            "examples": ["2022-02-16 10:51:41.163", "2022-01-28 17:26:19.661"]
        },

        "argv": {
            "description": "The entire saptune command as it was called.",
            "type": "string",
            "minLength": 7,
            "examples": ["saptune --format=json note list", "saptune --format=json version", "saptune --format=json json status"]
        },

        "pid": {
            "description": "PID of the saptune process creating this object.",
            "type": "integer",
            "minimum": 2
        },

        "command": {
            "description": "The saptune command (classifier), which was executed.",
            "type": "string",
            "enum": ["{{ self.command()|replace('saptune ','') }}"]
        },

        "result": {
            "description": "The result (output) of the command.",
            "type": "object",
            "required": {% block result_required %}{% endblock %},
            "additionalProperties": false,
            {% block result %}{% endblock %}
            "properties": {
                {% block result_properties %}{% endblock %}
            }
        },

        "exit code": {
            "description": "The return code the saptune command terminated with.",
            "type": "integer",
            "minimum": 0,
            "maximum": 255
        }, 

        "messages": {
            "description": "Contains all log messages normally printed on the screen in the order they were created.",
            "type": "array",
            "items": {
                "description": "A single message.",
                "type": "object",
                "required": ["priority", "message"],
                "additionalProperties": false,
                "properties": {

                    "priority": {
                        "description": "Priority of the log messages as defined at https://confluence.suse.com/display/SAP/Logging+Guide.",
                        "type": "string",
                        "enum": ["CRITICAL", "ERROR" ,"WARNING" ,"NOTICE" ,"INFO", "DEBUG"]
                    },

                    "message": {
                        "description": "The log message itself.",
                        "type": "string",
                        "minLength": 1,
                        "examples": ["main.go:57: saptune (3.0.2) started with 'saptune status'", "system.go:235: saptune terminated with exit code '1'"]
                    }
                }
            }
        }   
    },

    "$defs": { 

        "saptune remember message": {
            "description": "The remember message.",
            "type": "string",
            "examples": [ "\nRemember: if you wish to automatically activate the solution's tuning options after a reboot, you must enable and start saptune.service by running:\n    saptune service enablestart\n" ]
        },   

        "saptune note id": {
            "description": "The Note ID.",
            "type": "string",
            "pattern": "^[^ ]+$",
            "examples": ["1656250", "SAP_BOBJ"]
        },

        "saptune note version": {
            "description": "The Note version (defined in `man 5 saptune-note`).",
            "type": "string",
            "pattern": "^[0-9A-Za-z._+-]*$",
            "examples": ["7", "1.3-prod"]
        },

        "reference format": {
            "description": "Format of a reference.",
            "type": "string",
            "examples": ["https://launchpad.support.sap.com/#/notes/1410736"]
        },

        "saptune solution id": {
            "description": "The Solution ID.",
            "type": "string",
            "pattern": "^[^ ]+$",
            "examples": ["HANA", "myNetWeaver"]
        },

        "systemd state is-enabled": {
            "description": "Possible systemd states for 'is-enabled' of a service.",
            "type": "string",
            "enum": ["enabled", "enabled-runtime", "linked", "linked-runtime", "alias", "masked", "masked-runtime", "static", "indirect", "disabled", "generated", "transient", "bad"]   
        },

        "systemd state is-active": {
            "description": "Possible systemd states for 'is-active' of a service.",
            "type": "string",
            "enum": ["active", "inactive", "failed"]
        },

        "systemd state": {
            "description": "Possible systemd states for 'is-active' and 'is-enabled' of a service plus a 'not-available' option for missing packages.",
            "type": "array",
            "prefixItems": [
                { "$ref": "#/$defs/systemd state is-enabled" },
                { "$ref": "#/$defs/systemd state is-active" }
            ],
            "examples": [["disabled", "inactive"], ["enabled", "active"]]
        },

        "saptune parameter id": {
            "description": "Name of the parameter.",
            "type": "string",
            "pattern": "^[^ ]+$",
            "examples": ["LIMIT_@dba_hard_nofile", "kernel.shmall"]
        },

         "saptune parameter value": {
             "description": "Value of a parameter.",
             "type": "string",
             "examples": ["18446744073709551615", "-nobarrier", "never"]
         },

         "saptune parameter compliance": {
             "description": "States if the parameter is compliant or not.",
             "type": "boolean" 
         },

        "saptune amendments": {
            "description": "Optional amendments (footnotes).",
            "type": "array",
            "items": {
                "description": "Amendment (footnote) consists of an id and the explaining text.",
                "type": "object",
                "required": [ "index", "amendment" ],
                "additionalProperties": false,  
                "properties": {
                    "index": { 
                        "description": "Index of the amendment (footnote).",
                        "type": "integer",
                        "examples": ["11", "15"] 
                    },
                    "amendment": { 
                        "description": "Describes the meaning of the amendment (footnote).",
                        "type": "string", 
                        "minLength": 1,
                        "examples": ["the parameter is only used to calculate the size of tmpfs (/dev/shm)", "setting is not available on the system"] 
                    }
                }
            }
        },

        "saptune attentions": { 
            "description": "Attentions printed for a Note.",
            "type": "array",
            "items": {
                "required": [ "Note ID", "attention" ],
                "additionalProperties": false,  
                "properties": {
                    "Note ID": { "$ref": "#/$defs/saptune note id" },
                    "attention": { "type": "string", "minLength": 1 }
                }
            }
        },

        "saptune enabled Notes": {
            "description": "List of the enabled Notes.",
            "type":  "array",
            "items": { "$ref": "#/$defs/saptune note id" }                       
        },

        "saptune Note list": {
            "description": "List of Notes.",
            "type": "array",
            "items": { "$ref": "#/$defs/saptune note id" } 
        },

        "saptune applied Notes": {
            "description": "List of the applied Notes.",
            "type":  "array",
            "items": { "$ref": "#/$defs/saptune note id" }                       
        },    

        "saptune staged Notes": {
            "description": "List of the staged Notes.",
            "type":  "array",
            "items": { "$ref": "#/$defs/saptune note id" }                       
        },
         
        "saptune additional enabled Notes": {
            "description": "List of additional (to a Solution) applied Notes. ",
            "type":  "array",
            "items": { "$ref": "#/$defs/saptune note id" }                       
        },

        "saptune system compliance": {
            "description": "Overall compliance of all currently applied SAP Notes.",
            "type": "boolean"
        },

        "saptune enabled Solution": {
            "description": "The enabled Solution.",
            "type": "array",
            "items": { "$ref": "#/$defs/saptune solution id" }            
        },

        "saptune applied Solution": {
            "description": "The applied Solution (with information if partially applied).",
            "type": "array",
            "items": { 
                "description": "Solution information object.",
                "type": "object",
                "required": [ "Solution ID", "applied partially" ],
                "additionalProperties": false,  
                "properties": {
                    "Solution ID": { "$ref": "#/$defs/saptune solution id" },
                    "applied partially": {
                        "description": "States if the Solution is only partially applied.",
                        "type": "boolean"
                    } 
                }
            }
        },

        "saptune staged Solutions": {
            "description": "List of staged Solutions.",
            "type": "array",
            "items": { "$ref": "#/$defs/saptune solution id" }                                                  
        }        
    }
}

